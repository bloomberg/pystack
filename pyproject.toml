[build-system]

requires = [
     "setuptools",
     "wheel",
     "Cython",
     "pkgconfig"
]

build-backend = 'setuptools.build_meta'

[tool.ruff]
line-length = 95
select = ["F", "E", "W", "I001"]

[tool.ruff.isort]
force-single-line = true
known-first-party = ["pystack"]
known-third-party=["rich", "elftools", "pytest"]

[tool.isort]
force_single_line = true
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88
known_first_party=["pystack"]
known_third_party=["rich", "elftools", "pytest"]

[tool.towncrier]
package = "pystack"
package_dir = "src"
filename = "NEWS.rst"
directory = "news"
type = [
  { name = "Features",                  directory = "feature", showcontent = true },
  { name = "Deprecations and Removals", directory = "removal", showcontent = true },
  { name = "Bug Fixes",                 directory = "bugfix",  showcontent = true },
  { name = "Improved Documentation",    directory = "doc",     showcontent = true },
  { name = "Miscellaneous",             directory = "misc",    showcontent = true },
]
underlines = "-~"

[tool.cibuildwheel]
build = ["cp38-*", "cp39-*", "cp310-*", "cp311-*"]
manylinux-x86_64-image = "manylinux2014"
manylinux-i686-image = "manylinux2014"
musllinux-x86_64-image = "musllinux_1_2"
skip = "*-musllinux_aarch64"

[tool.cibuildwheel.linux]
before-all = [
  "yum install -y python-devel-2.7.5",
  "cd /",
  "VERS=0.189",
  "curl https://sourceware.org/elfutils/ftp/$VERS/elfutils-$VERS.tar.bz2 > ./elfutils.tar.bz2",
  "tar -xf elfutils.tar.bz2",
  "cd elfutils-$VERS",
  "patch libdwfl/dwfl_segment_report_module.c < {package}/build_scripts/elfutils_contiguous_segments.diff",
  "CFLAGS='-w' ./configure --enable-libdebuginfod=dummy --disable-debuginfod --prefix=/usr --libdir=/usr/lib64",
  "make install"
]

# Override the default linux before-all for musl linux
[[tool.cibuildwheel.overrides]]
select = "*-musllinux*"
before-all = [
  # Remove gettext-dev, which conficts with the musl-libintl, which is a build
  # dependency of elfutils.
  "apk del gettext-dev glib-dev",

  # Build the latest elfutils from source. The build steps come from
  # https://git.alpinelinux.org/aports/tree/main/elfutils, and the need to
  # set the FNM_EXTMATCH macro to get the build to succeed is seen here:
  # https://git.alpinelinux.org/aports/tree/main/elfutils/musl-macros.patch
  "cd /",
  "apk add --update argp-standalone bison bsd-compat-headers bzip2-dev flex-dev libtool linux-headers musl-fts-dev musl-libintl musl-obstack-dev xz-dev zlib-dev zstd-dev",
  "VERS=0.189",
  "curl https://sourceware.org/elfutils/ftp/$VERS/elfutils-$VERS.tar.bz2 > ./elfutils.tar.bz2",
  "tar -xf elfutils.tar.bz2",
  "cd elfutils-$VERS",
  "patch libdwfl/dwfl_segment_report_module.c < {package}/build_scripts/elfutils_contiguous_segments.diff",
  "CFLAGS='-w -DFNM_EXTMATCH=0' ./configure --prefix=/usr --disable-nls --disable-libdebuginfod --disable-debuginfod --with-zstd",
  "make install",

  # Reinstall libintl, as the Python interpreter requires it
  "apk del musl-libintl",
  "apk add libintl",
]

[tool.coverage.run]
plugins = [
  "Cython.Coverage",
]
source = [
  "src/pystack",
]
branch = true
parallel = true
omit = [
  "stringsource",
  "tests/integration/*program*.py",
]

[tool.coverage.report]
show_missing = true

[tool.pytest.ini_options]
# pytest retains all temp files from the last 3 test suite runs by default.
# Keep only ones for failed tests to avoid filling up a disk.
tmp_path_retention_policy = "failed"
