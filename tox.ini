[tox]
envlist = py38, lint,
isolated_build = true

[.pkg]
# Pass refroot environment variables in the isolated build step
passenv = DPKG_DISTRO_DEV_ROOT
          PKG_CONFIG_PATH
          PKG_CONFIG_SYSROOT_DIR
          PKG_CONFIG
          CC
          CCSHARED
          LD_LIBRARY_PATH

[testenv]
setenv = VIRTUALENV_DOWNLOAD=0
         COVERAGE_FILE={toxworkdir}/.coverage.{envname}
         cov: CYTHON_TEST_MACROS=1

passenv = TOXENV CI PATH
          DPKG_DISTRO_DEV_ROOT
          PKG_CONFIG_PATH
          PKG_CONFIG_SYSROOT_DIR
          PKG_CONFIG
          CC
          CCSHARED
          LD_LIBRARY_PATH

description =
    Run tests under {basepython}
    cov: with coverage

commands = make PYTEST_ARGS='{posargs} --junitxml={toxworkdir}/{envname}_integration.xml' check
commands_cov= make PYTEST_ARGS='{posargs} --junitxml={toxworkdir}/{envname}_integration.xml \
              --cov-report=xml:{toxworkdir}/coverage.xml' pycoverage
extras = test
allowlist_externals = make
                      valgrind

[testenv:lint]
description = lint code in {basepython}
extras = lint
commands = make lint

[testenv:py38-valgrind]
usedevelop = True
commands = make valgrind

[testenv:py38-cov]
usedevelop = True
commands = {[testenv]commands_cov}

[testenv:py38-dbg]
basepython = python3.8-dbg
# When running in a refroot, installing Python dependencies
# that are not available as wheels will compile them against
# the original dpkg location (/opt/bb/bin) instead of the location
# in the refroot. To avoid that, leverage the fact that the refroot
# sets correctly the LD_LIBRARY_PATH to prepend that location to the
# static linker search path in a portable way.
setenv=
    LDFLAGS=-L{env:LD_LIBRARY_PATH}



[coverage:run]
plugins = Cython.Coverage
source = src/pystack
branch = True
parallel = True
omit =
    tests/*
    *__init__.py

[coverage:report]
skip_covered = True
show_missing = True
